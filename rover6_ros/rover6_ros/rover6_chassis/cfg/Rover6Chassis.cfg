#!/usr/bin/env python
PACKAGE = "rover6_chassis"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add("kp_A",    double_t,    0, "Left motor P constant", 0.025,  0.0, 10.0)
gen.add("ki_A",    double_t,    0, "Left motor I constant", 0.0,  0.0, 1.0)
gen.add("kd_A",    double_t,    0, "Left motor D constant", 0.0,  0.0, 1.0)
gen.add("kp_B",    double_t,    0, "Right motor P constant", 0.025,  0.0, 10.0)
gen.add("ki_B",    double_t,    0, "Right motor I constant", 0.0,  0.0, 1.0)
gen.add("kd_B",    double_t,    0, "Right motor D constant", 0.0,  0.0, 1.0)
gen.add("speed_kA",    double_t,    0, "Left motor speed smoothing constant", 1.1,  0.0, 1.5)
gen.add("speed_kB",    double_t,    0, "Right motor speed smoothing constant", 1.1,  0.0, 1.5)

gen.add("obstacle_threshold_x_mm",    double_t,    0, "Horizonal stopping distance (mm)", 76.0,  0.0, 100.0)
gen.add("ledge_threshold_y_mm",    double_t,    0, "Vertical ledge threshold distance (mm)", 38.0,  0.0, 100.0)
gen.add("buffer_x_mm",    double_t,    0, "Buffer distance to account for reaction time (mm)", 100.0,  0.0, 100.0)

ranging_tilter_mode_enum = gen.enum([
    gen.const("Both",      int_t, 0, "Set ranging tilters to look for both obstacles and ledges"),
    gen.const("Obstacle",  int_t, 1, "Set ranging tilters to look for obstacles only"),
    gen.const("Ledge",     int_t, 2, "Set ranging tilters to look for ledges only"),
], "An enum to set size")
gen.add("ranging_tilter_mode",    int_t,    0, "Ranging tilter modes", 0,  0, 2, edit_method=ranging_tilter_mode_enum)

exit(gen.generate(PACKAGE, "rover6_chassis", "Rover6Chassis"))
